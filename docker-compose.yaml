services:
  apigw:
    build:
      context: ./apigw
      dockerfile: Dockerfile
    depends_on:
      - fls
      - us
    ports:
      - "8080:8080"
    networks:
      - public
      - internal

  fls:
    build:
      context: ./fls
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - redis
      - mongo
#      - minio
    environment:
      POSTGRES_URL: postgres://user:pass@postgres:5432/dbname?sslmode=disable
      REDIS_URL: redis://redis:6379
      MONGO_URL: mongodb://mongo:27017
#      MINIO_ENDPOINT: http://minio:9000
#      MINIO_ACCESS_KEY: minioadmin
#      MINIO_SECRET_KEY: minioadmin
    networks:
      - internal

  us:
    build:
      context: ./us
      dockerfile: Dockerfile
    depends_on:
      - redis
      - mongo
      - kafka
    environment:
      US_MONGO_HOST: mongo
      US_MONGO_PORT: 27017
      US_MONGO_USERNAME: mongoadmin
      US_MONGO_PASSWORD: mongoadmin
      US_REDIS_HOST: redis
      US_REDIS_PORT: 6379
      US_REDIS_PASSWORD: redisadmin

      POSTGRES_URL: postgres://user:pass@postgres:5432/dbname?sslmode=disable
      REDIS_URL: redis://redis:6379
      MONGO_URL: mongodb://mongo:27017
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    networks:
      - internal


  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: server
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: fistoli
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - internal
#
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "redisadmin"]
    networks:
      - internal

  mongo:
    image: mongo:6
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: mongoadmin
    volumes:
      - mongodata:/data/db
    networks:
      - internal

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - internal

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - internal
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:9092,LISTENER_DOCKER_EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

#  minio:
#    image: minio/minio
#    ports:
#      - "9000:9000"
#      - "9001:9001"
#    environment:
#      MINIO_ROOT_USER: minioadmin
#      MINIO_ROOT_PASSWORD: minioadmin
#    command: server --console-address ":9001" /data
#    volumes:
#      - miniodata:/data
#    networks:
#      - internal

volumes:
  pgdata:
  mongodata:
  miniodata:

networks:
  public:
    driver: bridge
  internal: